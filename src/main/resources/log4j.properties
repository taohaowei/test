log4j.rootLogger=debug,view,run,blog
#  ,Console,R
################################
### 配置来访的人员的日志信息 ###
################################
log4j.logger.view=INFO,view
log4j.additivity.view=false
log4j.appender.view=org.apache.log4j.RollingFileAppender
#指定日志消息的输出最低层次。
log4j.appender.view.Threshold=DEBUG
# 默认值是true,意谓着所有的消息都会被立即输出。
log4j.appender.view.ImmediateFlush=true
# 后缀可以是KB, MB 或者是 GB. 在日志文件到达该大小时，将会自动滚动，即将原来的内容移到mylog.log.1文件
log4j.appender.view.MaxFileSize=100KB
# 指定可以产生的滚动文件的最大数。
log4j.appender.view.MaxBackupIndex=1000
# 指定消息输出到mylog.txt文件。
log4j.appender.view.File=D:/data/bloglog/view.log
## 配置日志信息的格式（布局）
log4j.appender.view.layout=org.apache.log4j.PatternLayout
## 指定怎样格式化指定的消息。
log4j.appender.view.layout.ConversionPattern=%-4r %-5p %d{yyyy-MM-dd HH:mm:ss} %c.%M(%L) %m%n


################################
### 配置程序运行的日志信息 ###
################################
log4j.logger.run=INFO,run
log4j.additivity.run=false
log4j.appender.run=org.apache.log4j.RollingFileAppender
#指定日志消息的输出最低层次。
log4j.appender.run.Threshold=INFO
# 默认值是true,意谓着所有的消息都会被立即输出。
log4j.appender.run.ImmediateFlush=true
# 后缀可以是KB, MB 或者是 GB. 在日志文件到达该大小时，将会自动滚动，即将原来的内容移到mylog.log.1文件
log4j.appender.run.MaxFileSize=100KB
# 指定可以产生的滚动文件的最大数。
log4j.appender.run.MaxBackupIndex=1000
# 指定消息输出到mylog.txt文件。
log4j.appender.run.File=D:/data/bloglog/run.log
## 配置日志信息的格式（布局）
log4j.appender.run.layout=org.apache.log4j.PatternLayout
## 指定怎样格式化指定的消息。
log4j.appender.run.layout.ConversionPattern=%-4r %-5p %d{yyyy-MM-dd HH:mm:ss} %c.%M(%L) %m%n

################################
### 配置博客运行过程的日志信息 ###
################################
log4j.logger.blog=DEBUG,blog
log4j.additivity.blog=false
log4j.appender.blog=org.apache.log4j.RollingFileAppender
#指定日志消息的输出最低层次。
log4j.appender.blog.Threshold=DEBUG
# 默认值是true,意谓着所有的消息都会被立即输出。
log4j.appender.blog.ImmediateFlush=true
# 后缀可以是KB, MB 或者是 GB. 在日志文件到达该大小时，将会自动滚动，即将原来的内容移到mylog.log.1文件
log4j.appender.blog.MaxFileSize=100KB
# 指定可以产生的滚动文件的最大数。
log4j.appender.blog.MaxBackupIndex=1000
# 指定消息输出到mylog.txt文件。
log4j.appender.blog.File=D:/data/bloglog/blog.log
## 配置日志信息的格式（布局）
log4j.appender.blog.layout=org.apache.log4j.PatternLayout
## 指定怎样格式化指定的消息。
log4j.appender.blog.layout.ConversionPattern=%-4r %-5p %d{yyyy-MM-dd HH:mm:ss} %c.%M(%L) %m%n

log4j.appender.Console=org.apache.log4j.ConsoleAppender

log4j.appender.Console.layout=org.apache.log4j.PatternLayout

#log4j.appender.Console.layout.ConversionPattern=%d [%t] %-5p %c - %m%n

log4j.appender.Console.layout.ConversionPattern=%d{yy-MM-dd HH:mm:ss} %5p %c{1}:%L - %m%n


#
#log4j.appender.R=org.apache.log4j.DailyRollingFileAppender
#
#log4j.appender.R.File=D:/tomcat8/logs/tomcat.log
#
#log4j.appender.R.layout=org.apache.log4j.PatternLayout
#
#log4j.appender.R.layout.ConversionPattern=%d{yyyy.MM.dd HH:mm:ss} %5p %c{1}(%L):? %m%n
#
#
#
#log4j.logger.org.apache=info,R
#
#log4j.logger.org.apache.catalina.core.ContainerBase.[Catalina].[localhost]=DEBUG, R
#
#log4j.logger.org.apache.catalina.core=info,R
#
#log4j.logger.org.apache.catalina.session=info,R