<div id="article_content" class="article_content tracking-ad" data-mod="popu_307" data-dsm="post">

<div class="code-catalog" style="padding-bottom:0px; display:block">
<h2><a name="t0" target="_blank"></a>出自-》http://baike.xsoftlab.net/view/209.html#1<br>
<span class="index"></span></h2>
<h2><a name="t1" target="_blank"></a><span class="index">| |</span><span class="content">目录</span></h2>
<ul class="catalog-body">
<li class="catalog-h2"><span class="catalog-h2-index">1</span><a target="_blank" href="http://baike.xsoftlab.net/view/209.html#1">反射机制是什么</a></li><li class="catalog-h2"><span class="catalog-h2-index">2</span><a target="_blank" href="http://baike.xsoftlab.net/view/209.html#2">反射机制能做什么</a></li><li class="catalog-h2"><span class="catalog-h2-index">3</span><a target="_blank" href="http://baike.xsoftlab.net/view/209.html#3">反射机制的相关API</a></li><li class="catalog-h3"><span>·</span><a target="_blank" href="http://baike.xsoftlab.net/view/209.html#3_1">通过一个对象获得完整的包名和类名</a></li><li class="catalog-h3"><span>·</span><a target="_blank" href="http://baike.xsoftlab.net/view/209.html#3_2">实例化Class类对象</a></li><li class="catalog-h3"><span>·</span><a target="_blank" href="http://baike.xsoftlab.net/view/209.html#3_3">获取一个对象的父类与实现的接口</a></li><li class="catalog-h3"><span>·</span><a target="_blank" href="http://baike.xsoftlab.net/view/209.html#3_4">获取某个类中的全部构造函数 - 详见下例</a></li><li class="catalog-h3"><span>·</span><a target="_blank" href="http://baike.xsoftlab.net/view/209.html#3_5">通过反射机制实例化一个类的对象</a></li><li class="catalog-h3"><span>·</span><a target="_blank" href="http://baike.xsoftlab.net/view/209.html#3_6">获取某个类的全部属性</a></li><li class="catalog-h3"><span>·</span><a target="_blank" href="http://baike.xsoftlab.net/view/209.html#3_7">获取某个类的全部方法</a></li><li class="catalog-h3"><span>·</span><a target="_blank" href="http://baike.xsoftlab.net/view/209.html#3_8">通过反射机制调用某个类的方法</a></li><li class="catalog-h3"><span>·</span><a target="_blank" href="http://baike.xsoftlab.net/view/209.html#3_9">通过反射机制操作某个类的属性</a></li><li class="catalog-h3"><span>·</span><a target="_blank" href="http://baike.xsoftlab.net/view/209.html#3_10">反射机制的动态代理</a></li><li class="catalog-h2"><span class="catalog-h2-index">4</span><a target="_blank" href="http://baike.xsoftlab.net/view/209.html#4">反射机制的应用实例</a></li><li class="catalog-h3"><span>·</span><a target="_blank" href="http://baike.xsoftlab.net/view/209.html#4_1">在泛型为Integer的ArrayList中存放一个String类型的对象。</a></li><li class="catalog-h3"><span>·</span><a target="_blank" href="http://baike.xsoftlab.net/view/209.html#4_2">通过反射取得并修改数组的信息</a></li><li class="catalog-h3"><span>·</span><a target="_blank" href="http://baike.xsoftlab.net/view/209.html#4_3">通过反射机制修改数组的大小</a></li><li class="catalog-h3"><span>·</span><a target="_blank" href="http://baike.xsoftlab.net/view/209.html#4_4">将反射机制应用于工厂模式</a></li></ul>
</div>
<div class="anchor-list"><a target="_blank" name="1" class="anchor "></a></div>
<h2><a name="t2" target="_blank"></a><span class="index">1</span><span class="content">反射机制是什么</span></h2>
<p style="text-indent:2em">反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为<a href="http://lib.csdn.net/base/java" class="replace_word" title="Java 知识库" target="_blank" style="color:#df3434; font-weight:bold;">Java</a>语言的反射机制。</p>
<div class="anchor-list"><a target="_blank" name="2" class="anchor "></a></div>
<h2 style="text-indent:0em"><a name="t3" target="_blank"></a><span class="index">2</span><span class="content">反射机制能做什么</span></h2>
<p style="text-indent:2em">反射机制主要提供了以下功能：&nbsp;</p>
<ul class=" list-paddingleft-2" style="list-style-type:disc">
<li>
<p style="text-indent:0em">在运行时判断任意一个对象所属的类；</p>
</li><li>
<p style="text-indent:0em">在运行时构造任意一个类的对象；</p>
</li><li>
<p style="text-indent:0em">在运行时判断任意一个类所具有的成员变量和方法；</p>
</li><li>
<p style="text-indent:0em">在运行时调用任意一个对象的方法；</p>
</li><li>
<p style="text-indent:0em">生成动态代理。</p>
</li></ul>
<div class="anchor-list"><a target="_blank" name="3" class="anchor "></a></div>
<h2 style="text-indent:0em"><a name="t4" target="_blank"></a><span class="index">3</span><span class="content">反射机制的相关API</span></h2>
<div class="anchor-list"><a target="_blank" name="3_1" class="anchor "></a></div>
<h3><a name="t5" target="_blank"></a>通过一个对象获得完整的包名和类名</h3>
<div>
<div id="syntaxhighlighter-toolbar">
<div class="toolbar"><span>Java</span> | <span class="btn-clipboard btn-clipboard-hover">
复制</span></div>
</div>
<div id="highlighter_658284" class="syntaxhighlighter  Java">
<table cellspacing="0" cellpadding="0" border="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Java keyword">package</code>&nbsp;<code class="Java plain">net.xsoftlab.baike;</code></div>
<div class="line number2 index1 alt1"><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">class</code>&nbsp;<code class="Java plain">TestReflect&nbsp;{</code></div>
<div class="line number3 index2 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">static</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">main(String[]&nbsp;args)&nbsp;</code><code class="Java keyword">throws</code>&nbsp;<code class="Java plain">Exception&nbsp;{</code></div>
<div class="line number4 index3 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">TestReflect&nbsp;testReflect&nbsp;=&nbsp;</code><code class="Java keyword">new</code>&nbsp;<code class="Java plain">TestReflect();</code></div>
<div class="line number5 index4 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(testReflect.getClass().getName());</code></div>
<div class="line number6 index5 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;结果&nbsp;net.xsoftlab.baike.TestReflect</code></div>
<div class="line number7 index6 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number8 index7 alt1"><code class="Java plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="anchor-list"><a target="_blank" name="3_2" class="anchor "></a></div>
<h3><a name="t6" target="_blank"></a>实例化Class类对象</h3>
<div>
<div id="syntaxhighlighter-toolbar">
<div class="toolbar"><span>Java</span> | <span class="btn-clipboard btn-clipboard-hover">
复制</span></div>
</div>
<div id="highlighter_973893" class="syntaxhighlighter  Java">
<table cellspacing="0" cellpadding="0" border="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Java keyword">package</code>&nbsp;<code class="Java plain">net.xsoftlab.baike;</code></div>
<div class="line number2 index1 alt1"><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">class</code>&nbsp;<code class="Java plain">TestReflect&nbsp;{</code></div>
<div class="line number3 index2 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">static</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">main(String[]&nbsp;args)&nbsp;</code><code class="Java keyword">throws</code>&nbsp;<code class="Java plain">Exception&nbsp;{</code></div>
<div class="line number4 index3 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;class1&nbsp;=&nbsp;</code><code class="Java keyword">null</code><code class="Java plain">;</code></div>
<div class="line number5 index4 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;class2&nbsp;=&nbsp;</code><code class="Java keyword">null</code><code class="Java plain">;</code></div>
<div class="line number6 index5 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;class3&nbsp;=&nbsp;</code><code class="Java keyword">null</code><code class="Java plain">;</code></div>
<div class="line number7 index6 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;一般采用这种形式</code></div>
<div class="line number8 index7 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">class1&nbsp;=&nbsp;Class.forName(</code><code class="Java string">"net.xsoftlab.baike.TestReflect"</code><code class="Java plain">);</code></div>
<div class="line number9 index8 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">class2&nbsp;=&nbsp;</code><code class="Java keyword">new</code>&nbsp;<code class="Java plain">TestReflect().getClass();</code></div>
<div class="line number10 index9 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">class3&nbsp;=&nbsp;TestReflect.</code><code class="Java keyword">class</code><code class="Java plain">;</code></div>
<div class="line number11 index10 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">"类名称&nbsp;&nbsp;&nbsp;"</code>&nbsp;<code class="Java plain">+&nbsp;class1.getName());</code></div>
<div class="line number12 index11 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">"类名称&nbsp;&nbsp;&nbsp;"</code>&nbsp;<code class="Java plain">+&nbsp;class2.getName());</code></div>
<div class="line number13 index12 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">"类名称&nbsp;&nbsp;&nbsp;"</code>&nbsp;<code class="Java plain">+&nbsp;class3.getName());</code></div>
<div class="line number14 index13 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number15 index14 alt2"><code class="Java plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="anchor-list"><a target="_blank" name="3_3" class="anchor "></a></div>
<h3><a name="t7" target="_blank"></a>获取一个对象的父类与实现的接口</h3>
<div>
<div id="syntaxhighlighter-toolbar">
<div class="toolbar"><span>Java</span> | <span class="btn-clipboard btn-clipboard-hover">
复制</span></div>
</div>
<div id="highlighter_170573" class="syntaxhighlighter  Java">
<table cellspacing="0" cellpadding="0" border="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Java keyword">package</code>&nbsp;<code class="Java plain">net.xsoftlab.baike;</code></div>
<div class="line number2 index1 alt1"><code class="Java keyword">import</code>&nbsp;<code class="Java plain">java.io.Serializable;</code></div>
<div class="line number3 index2 alt2"><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">class</code>&nbsp;<code class="Java plain">TestReflect&nbsp;</code><code class="Java keyword">implements</code>&nbsp;<code class="Java plain">Serializable&nbsp;{</code></div>
<div class="line number4 index3 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">private</code>&nbsp;<code class="Java keyword">static</code>&nbsp;<code class="Java keyword">final</code>&nbsp;<code class="Java keyword">long</code>&nbsp;<code class="Java plain">serialVersionUID&nbsp;=&nbsp;-2862585049955236662L;</code></div>
<div class="line number5 index4 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">static</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">main(String[]&nbsp;args)&nbsp;</code><code class="Java keyword">throws</code>&nbsp;<code class="Java plain">Exception&nbsp;{</code></div>
<div class="line number6 index5 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;clazz&nbsp;=&nbsp;Class.forName(</code><code class="Java string">"net.xsoftlab.baike.TestReflect"</code><code class="Java plain">);</code></div>
<div class="line number7 index6 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;取得父类</code></div>
<div class="line number8 index7 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;parentClass&nbsp;=&nbsp;clazz.getSuperclass();</code></div>
<div class="line number9 index8 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">"clazz的父类为："</code>&nbsp;<code class="Java plain">+&nbsp;parentClass.getName());</code></div>
<div class="line number10 index9 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;clazz的父类为：&nbsp;java.lang.Object</code></div>
<div class="line number11 index10 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;获取所有的接口</code></div>
<div class="line number12 index11 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;intes[]&nbsp;=&nbsp;clazz.getInterfaces();</code></div>
<div class="line number13 index12 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">"clazz实现的接口有："</code><code class="Java plain">);</code></div>
<div class="line number14 index13 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">for</code>&nbsp;<code class="Java plain">(</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">i&nbsp;=&nbsp;</code><code class="Java value">0</code><code class="Java plain">;&nbsp;i&nbsp;&lt;&nbsp;intes.length;&nbsp;i++)&nbsp;{</code></div>
<div class="line number15 index14 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println((i&nbsp;+&nbsp;</code><code class="Java value">1</code><code class="Java plain">)&nbsp;+&nbsp;</code><code class="Java string">"："</code>&nbsp;<code class="Java plain">+&nbsp;intes[i].getName());</code></div>
<div class="line number16 index15 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number17 index16 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;clazz实现的接口有：</code></div>
<div class="line number18 index17 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;1：java.io.Serializable</code></div>
<div class="line number19 index18 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number20 index19 alt1"><code class="Java plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="anchor-list"><a target="_blank" name="3_4" class="anchor "></a></div>
<h3><a name="t8" target="_blank"></a>获取某个类中的全部构造函数 - 详见下例</h3>
<div class="anchor-list"><a target="_blank" name="3_5" class="anchor "></a></div>
<h3><a name="t9" target="_blank"></a>通过反射机制实例化一个类的对象</h3>
<div>
<div id="syntaxhighlighter-toolbar">
<div class="toolbar"><span>Java</span> | <span class="btn-clipboard btn-clipboard-hover">
复制</span></div>
</div>
<div id="highlighter_895799" class="syntaxhighlighter  Java">
<table cellspacing="0" cellpadding="0" border="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Java keyword">package</code>&nbsp;<code class="Java plain">net.xsoftlab.baike;</code></div>
<div class="line number2 index1 alt1"><code class="Java keyword">import</code>&nbsp;<code class="Java plain">java.lang.reflect.Constructor;</code></div>
<div class="line number3 index2 alt2"><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">class</code>&nbsp;<code class="Java plain">TestReflect&nbsp;{</code></div>
<div class="line number4 index3 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">static</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">main(String[]&nbsp;args)&nbsp;</code><code class="Java keyword">throws</code>&nbsp;<code class="Java plain">Exception&nbsp;{</code></div>
<div class="line number5 index4 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;class1&nbsp;=&nbsp;</code><code class="Java keyword">null</code><code class="Java plain">;</code></div>
<div class="line number6 index5 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">class1&nbsp;=&nbsp;Class.forName(</code><code class="Java string">"net.xsoftlab.baike.User"</code><code class="Java plain">);</code></div>
<div class="line number7 index6 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;第一种方法，实例化默认构造方法，调用set赋值</code></div>
<div class="line number8 index7 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">User&nbsp;user&nbsp;=&nbsp;(User)&nbsp;class1.newInstance();</code></div>
<div class="line number9 index8 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">user.setAge(</code><code class="Java value">20</code><code class="Java plain">);</code></div>
<div class="line number10 index9 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">user.setName(</code><code class="Java string">"Rollen"</code><code class="Java plain">);</code></div>
<div class="line number11 index10 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(user);</code></div>
<div class="line number12 index11 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;结果&nbsp;User&nbsp;[age=20,&nbsp;name=Rollen]</code></div>
<div class="line number13 index12 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;第二种方法&nbsp;取得全部的构造函数&nbsp;使用构造函数赋值</code></div>
<div class="line number14 index13 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Constructor&lt;?&gt;&nbsp;cons[]&nbsp;=&nbsp;class1.getConstructors();</code></div>
<div class="line number15 index14 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;查看每个构造方法需要的参数</code></div>
<div class="line number16 index15 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">for</code>&nbsp;<code class="Java plain">(</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">i&nbsp;=&nbsp;</code><code class="Java value">0</code><code class="Java plain">;&nbsp;i&nbsp;&lt;&nbsp;cons.length;&nbsp;i++)&nbsp;{</code></div>
<div class="line number17 index16 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;clazzs[]&nbsp;=&nbsp;cons[i].getParameterTypes();</code></div>
<div class="line number18 index17 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.print(</code><code class="Java string">"cons["</code>&nbsp;<code class="Java plain">+&nbsp;i&nbsp;+&nbsp;</code><code class="Java string">"]&nbsp;("</code><code class="Java plain">);</code></div>
<div class="line number19 index18 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">for</code>&nbsp;<code class="Java plain">(</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">j&nbsp;=&nbsp;</code><code class="Java value">0</code><code class="Java plain">;&nbsp;j&nbsp;&lt;&nbsp;clazzs.length;&nbsp;j++)&nbsp;{</code></div>
<div class="line number20 index19 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">if</code>&nbsp;<code class="Java plain">(j&nbsp;==&nbsp;clazzs.length&nbsp;-&nbsp;</code><code class="Java value">1</code><code class="Java plain">)</code></div>
<div class="line number21 index20 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.print(clazzs[j].getName());</code></div>
<div class="line number22 index21 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">else</code></div>
<div class="line number23 index22 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.print(clazzs[j].getName()&nbsp;+&nbsp;</code><code class="Java string">","</code><code class="Java plain">);</code></div>
<div class="line number24 index23 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number25 index24 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">")"</code><code class="Java plain">);</code></div>
<div class="line number26 index25 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number27 index26 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;结果</code></div>
<div class="line number28 index27 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;cons[0]&nbsp;(java.lang.String)</code></div>
<div class="line number29 index28 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;cons[1]&nbsp;(int,java.lang.String)</code></div>
<div class="line number30 index29 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;cons[2]&nbsp;()</code></div>
<div class="line number31 index30 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">user&nbsp;=&nbsp;(User)&nbsp;cons[</code><code class="Java value">0</code><code class="Java plain">].newInstance(</code><code class="Java string">"Rollen"</code><code class="Java plain">);</code></div>
<div class="line number32 index31 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(user);</code></div>
<div class="line number33 index32 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;结果&nbsp;User&nbsp;[age=0,&nbsp;name=Rollen]</code></div>
<div class="line number34 index33 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">user&nbsp;=&nbsp;(User)&nbsp;cons[</code><code class="Java value">1</code><code class="Java plain">].newInstance(</code><code class="Java value">20</code><code class="Java plain">,&nbsp;</code><code class="Java string">"Rollen"</code><code class="Java plain">);</code></div>
<div class="line number35 index34 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(user);</code></div>
<div class="line number36 index35 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;结果&nbsp;User&nbsp;[age=20,&nbsp;name=Rollen]</code></div>
<div class="line number37 index36 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number38 index37 alt1"><code class="Java plain">}</code></div>
<div class="line number39 index38 alt2"><code class="Java keyword">class</code>&nbsp;<code class="Java plain">User&nbsp;{</code></div>
<div class="line number40 index39 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">private</code>&nbsp;<code class="Java keyword">int</code>&nbsp;<code class="Java plain">age;</code></div>
<div class="line number41 index40 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">private</code>&nbsp;<code class="Java plain">String&nbsp;name;</code></div>
<div class="line number42 index41 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java plain">User()&nbsp;{</code></div>
<div class="line number43 index42 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">super</code><code class="Java plain">();</code></div>
<div class="line number44 index43 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number45 index44 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java plain">User(String&nbsp;name)&nbsp;{</code></div>
<div class="line number46 index45 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">super</code><code class="Java plain">();</code></div>
<div class="line number47 index46 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">this</code><code class="Java plain">.name&nbsp;=&nbsp;name;</code></div>
<div class="line number48 index47 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number49 index48 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java plain">User(</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">age,&nbsp;String&nbsp;name)&nbsp;{</code></div>
<div class="line number50 index49 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">super</code><code class="Java plain">();</code></div>
<div class="line number51 index50 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">this</code><code class="Java plain">.age&nbsp;=&nbsp;age;</code></div>
<div class="line number52 index51 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">this</code><code class="Java plain">.name&nbsp;=&nbsp;name;</code></div>
<div class="line number53 index52 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number54 index53 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">int</code>&nbsp;<code class="Java plain">getAge()&nbsp;{</code></div>
<div class="line number55 index54 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">return</code>&nbsp;<code class="Java plain">age;</code></div>
<div class="line number56 index55 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number57 index56 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">setAge(</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">age)&nbsp;{</code></div>
<div class="line number58 index57 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">this</code><code class="Java plain">.age&nbsp;=&nbsp;age;</code></div>
<div class="line number59 index58 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number60 index59 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java plain">String&nbsp;getName()&nbsp;{</code></div>
<div class="line number61 index60 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">return</code>&nbsp;<code class="Java plain">name;</code></div>
<div class="line number62 index61 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number63 index62 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">setName(String&nbsp;name)&nbsp;{</code></div>
<div class="line number64 index63 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">this</code><code class="Java plain">.name&nbsp;=&nbsp;name;</code></div>
<div class="line number65 index64 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number66 index65 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java color1">@Override</code></div>
<div class="line number67 index66 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java plain">String&nbsp;toString()&nbsp;{</code></div>
<div class="line number68 index67 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">return</code>&nbsp;<code class="Java string">"User&nbsp;[age="</code>&nbsp;<code class="Java plain">+&nbsp;age&nbsp;+&nbsp;</code><code class="Java string">",&nbsp;name="</code>&nbsp;<code class="Java plain">+&nbsp;name&nbsp;+&nbsp;</code><code class="Java string">"]"</code><code class="Java plain">;</code></div>
<div class="line number69 index68 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number70 index69 alt1"><code class="Java plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="anchor-list"><a target="_blank" name="3_6" class="anchor "></a></div>
<h3><a name="t10" target="_blank"></a>获取某个类的全部属性</h3>
<div>
<div id="syntaxhighlighter-toolbar">
<div class="toolbar"><span>Java</span> | <span class="btn-clipboard btn-clipboard-hover">
复制</span></div>
</div>
<div id="highlighter_863372" class="syntaxhighlighter  Java">
<table cellspacing="0" cellpadding="0" border="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Java keyword">package</code>&nbsp;<code class="Java plain">net.xsoftlab.baike;</code></div>
<div class="line number2 index1 alt1"><code class="Java keyword">import</code>&nbsp;<code class="Java plain">java.io.Serializable;</code></div>
<div class="line number3 index2 alt2"><code class="Java keyword">import</code>&nbsp;<code class="Java plain">java.lang.reflect.Field;</code></div>
<div class="line number4 index3 alt1"><code class="Java keyword">import</code>&nbsp;<code class="Java plain">java.lang.reflect.Modifier;</code></div>
<div class="line number5 index4 alt2"><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">class</code>&nbsp;<code class="Java plain">TestReflect&nbsp;</code><code class="Java keyword">implements</code>&nbsp;<code class="Java plain">Serializable&nbsp;{</code></div>
<div class="line number6 index5 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">private</code>&nbsp;<code class="Java keyword">static</code>&nbsp;<code class="Java keyword">final</code>&nbsp;<code class="Java keyword">long</code>&nbsp;<code class="Java plain">serialVersionUID&nbsp;=&nbsp;-2862585049955236662L;</code></div>
<div class="line number7 index6 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">static</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">main(String[]&nbsp;args)&nbsp;</code><code class="Java keyword">throws</code>&nbsp;<code class="Java plain">Exception&nbsp;{</code></div>
<div class="line number8 index7 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;clazz&nbsp;=&nbsp;Class.forName(</code><code class="Java string">"net.xsoftlab.baike.TestReflect"</code><code class="Java plain">);</code></div>
<div class="line number9 index8 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">"===============本类属性==============="</code><code class="Java plain">);</code></div>
<div class="line number10 index9 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;取得本类的全部属性</code></div>
<div class="line number11 index10 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Field[]&nbsp;field&nbsp;=&nbsp;clazz.getDeclaredFields();</code></div>
<div class="line number12 index11 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">for</code>&nbsp;<code class="Java plain">(</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">i&nbsp;=&nbsp;</code><code class="Java value">0</code><code class="Java plain">;&nbsp;i&nbsp;&lt;&nbsp;field.length;&nbsp;i++)&nbsp;{</code></div>
<div class="line number13 index12 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;权限修饰符</code></div>
<div class="line number14 index13 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">mo&nbsp;=&nbsp;field[i].getModifiers();</code></div>
<div class="line number15 index14 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">String&nbsp;priv&nbsp;=&nbsp;Modifier.toString(mo);</code></div>
<div class="line number16 index15 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;属性类型</code></div>
<div class="line number17 index16 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;type&nbsp;=&nbsp;field[i].getType();</code></div>
<div class="line number18 index17 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(priv&nbsp;+&nbsp;</code><code class="Java string">"&nbsp;"</code>&nbsp;<code class="Java plain">+&nbsp;type.getName()&nbsp;+&nbsp;</code><code class="Java string">"&nbsp;"</code>&nbsp;<code class="Java plain">+&nbsp;field[i].getName()&nbsp;+&nbsp;</code><code class="Java string">";"</code><code class="Java plain">);</code></div>
<div class="line number19 index18 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number20 index19 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>
<div class="line number21 index20 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">"==========实现的接口或者父类的属性=========="</code><code class="Java plain">);</code></div>
<div class="line number22 index21 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;取得实现的接口或者父类的属性</code></div>
<div class="line number23 index22 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Field[]&nbsp;filed1&nbsp;=&nbsp;clazz.getFields();</code></div>
<div class="line number24 index23 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">for</code>&nbsp;<code class="Java plain">(</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">j&nbsp;=&nbsp;</code><code class="Java value">0</code><code class="Java plain">;&nbsp;j&nbsp;&lt;&nbsp;filed1.length;&nbsp;j++)&nbsp;{</code></div>
<div class="line number25 index24 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;权限修饰符</code></div>
<div class="line number26 index25 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">mo&nbsp;=&nbsp;filed1[j].getModifiers();</code></div>
<div class="line number27 index26 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">String&nbsp;priv&nbsp;=&nbsp;Modifier.toString(mo);</code></div>
<div class="line number28 index27 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;属性类型</code></div>
<div class="line number29 index28 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;type&nbsp;=&nbsp;filed1[j].getType();</code></div>
<div class="line number30 index29 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(priv&nbsp;+&nbsp;</code><code class="Java string">"&nbsp;"</code>&nbsp;<code class="Java plain">+&nbsp;type.getName()&nbsp;+&nbsp;</code><code class="Java string">"&nbsp;"</code>&nbsp;<code class="Java plain">+&nbsp;filed1[j].getName()&nbsp;+&nbsp;</code><code class="Java string">";"</code><code class="Java plain">);</code></div>
<div class="line number31 index30 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number32 index31 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number33 index32 alt2"><code class="Java plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="anchor-list"><a target="_blank" name="3_7" class="anchor "></a></div>
<h3><a name="t11" target="_blank"></a>获取某个类的全部方法<br>
</h3>
<div>
<div id="syntaxhighlighter-toolbar">
<div class="toolbar"><span>Java</span> | <span class="btn-clipboard btn-clipboard-hover">
复制</span></div>
</div>
<div id="highlighter_442515" class="syntaxhighlighter  Java">
<table cellspacing="0" cellpadding="0" border="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Java keyword">package</code>&nbsp;<code class="Java plain">net.xsoftlab.baike;</code></div>
<div class="line number2 index1 alt1"><code class="Java keyword">import</code>&nbsp;<code class="Java plain">java.io.Serializable;</code></div>
<div class="line number3 index2 alt2"><code class="Java keyword">import</code>&nbsp;<code class="Java plain">java.lang.reflect.Method;</code></div>
<div class="line number4 index3 alt1"><code class="Java keyword">import</code>&nbsp;<code class="Java plain">java.lang.reflect.Modifier;</code></div>
<div class="line number5 index4 alt2"><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">class</code>&nbsp;<code class="Java plain">TestReflect&nbsp;</code><code class="Java keyword">implements</code>&nbsp;<code class="Java plain">Serializable&nbsp;{</code></div>
<div class="line number6 index5 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">private</code>&nbsp;<code class="Java keyword">static</code>&nbsp;<code class="Java keyword">final</code>&nbsp;<code class="Java keyword">long</code>&nbsp;<code class="Java plain">serialVersionUID&nbsp;=&nbsp;-2862585049955236662L;</code></div>
<div class="line number7 index6 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">static</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">main(String[]&nbsp;args)&nbsp;</code><code class="Java keyword">throws</code>&nbsp;<code class="Java plain">Exception&nbsp;{</code></div>
<div class="line number8 index7 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;clazz&nbsp;=&nbsp;Class.forName(</code><code class="Java string">"net.xsoftlab.baike.TestReflect"</code><code class="Java plain">);</code></div>
<div class="line number9 index8 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Method&nbsp;method[]&nbsp;=&nbsp;clazz.getMethods();</code></div>
<div class="line number10 index9 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">for</code>&nbsp;<code class="Java plain">(</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">i&nbsp;=&nbsp;</code><code class="Java value">0</code><code class="Java plain">;&nbsp;i&nbsp;&lt;&nbsp;method.length;&nbsp;++i)&nbsp;{</code></div>
<div class="line number11 index10 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;returnType&nbsp;=&nbsp;method[i].getReturnType();</code></div>
<div class="line number12 index11 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;para[]&nbsp;=&nbsp;method[i].getParameterTypes();</code></div>
<div class="line number13 index12 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">temp&nbsp;=&nbsp;method[i].getModifiers();</code></div>
<div class="line number14 index13 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.print(Modifier.toString(temp)&nbsp;+&nbsp;</code><code class="Java string">"&nbsp;"</code><code class="Java plain">);</code></div>
<div class="line number15 index14 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.print(returnType.getName()&nbsp;+&nbsp;</code><code class="Java string">"&nbsp;&nbsp;"</code><code class="Java plain">);</code></div>
<div class="line number16 index15 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.print(method[i].getName()&nbsp;+&nbsp;</code><code class="Java string">"&nbsp;"</code><code class="Java plain">);</code></div>
<div class="line number17 index16 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.print(</code><code class="Java string">"("</code><code class="Java plain">);</code></div>
<div class="line number18 index17 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">for</code>&nbsp;<code class="Java plain">(</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">j&nbsp;=&nbsp;</code><code class="Java value">0</code><code class="Java plain">;&nbsp;j&nbsp;&lt;&nbsp;para.length;&nbsp;++j)&nbsp;{</code></div>
<div class="line number19 index18 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.print(para[j].getName()&nbsp;+&nbsp;</code><code class="Java string">"&nbsp;"</code>&nbsp;<code class="Java plain">+&nbsp;</code><code class="Java string">"arg"</code>&nbsp;<code class="Java plain">+&nbsp;j);</code></div>
<div class="line number20 index19 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">if</code>&nbsp;<code class="Java plain">(j&nbsp;&lt;&nbsp;para.length&nbsp;-&nbsp;</code><code class="Java value">1</code><code class="Java plain">)&nbsp;{</code></div>
<div class="line number21 index20 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.print(</code><code class="Java string">","</code><code class="Java plain">);</code></div>
<div class="line number22 index21 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number23 index22 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number24 index23 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;exce[]&nbsp;=&nbsp;method[i].getExceptionTypes();</code></div>
<div class="line number25 index24 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">if</code>&nbsp;<code class="Java plain">(exce.length&nbsp;&gt;&nbsp;</code><code class="Java value">0</code><code class="Java plain">)&nbsp;{</code></div>
<div class="line number26 index25 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.print(</code><code class="Java string">")&nbsp;throws&nbsp;"</code><code class="Java plain">);</code></div>
<div class="line number27 index26 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">for</code>&nbsp;<code class="Java plain">(</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">k&nbsp;=&nbsp;</code><code class="Java value">0</code><code class="Java plain">;&nbsp;k&nbsp;&lt;&nbsp;exce.length;&nbsp;++k)&nbsp;{</code></div>
<div class="line number28 index27 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.print(exce[k].getName()&nbsp;+&nbsp;</code><code class="Java string">"&nbsp;"</code><code class="Java plain">);</code></div>
<div class="line number29 index28 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">if</code>&nbsp;<code class="Java plain">(k&nbsp;&lt;&nbsp;exce.length&nbsp;-&nbsp;</code><code class="Java value">1</code><code class="Java plain">)&nbsp;{</code></div>
<div class="line number30 index29 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.print(</code><code class="Java string">","</code><code class="Java plain">);</code></div>
<div class="line number31 index30 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number32 index31 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number33 index32 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}&nbsp;</code><code class="Java keyword">else</code>&nbsp;<code class="Java plain">{</code></div>
<div class="line number34 index33 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.print(</code><code class="Java string">")"</code><code class="Java plain">);</code></div>
<div class="line number35 index34 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number36 index35 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println();</code></div>
<div class="line number37 index36 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number38 index37 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number39 index38 alt2"><code class="Java plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="anchor-list"><a target="_blank" name="3_8" class="anchor "></a></div>
<h3><a name="t12" target="_blank"></a>通过反射机制调用某个类的方法<br>
</h3>
<div>
<div id="syntaxhighlighter-toolbar">
<div class="toolbar"><span>Java</span> | <span class="btn-clipboard btn-clipboard-hover">
复制</span></div>
</div>
<div id="highlighter_819768" class="syntaxhighlighter  Java">
<table cellspacing="0" cellpadding="0" border="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Java keyword">package</code>&nbsp;<code class="Java plain">net.xsoftlab.baike;</code></div>
<div class="line number2 index1 alt1"><code class="Java keyword">import</code>&nbsp;<code class="Java plain">java.lang.reflect.Method;</code></div>
<div class="line number3 index2 alt2"><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">class</code>&nbsp;<code class="Java plain">TestReflect&nbsp;{</code></div>
<div class="line number4 index3 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">static</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">main(String[]&nbsp;args)&nbsp;</code><code class="Java keyword">throws</code>&nbsp;<code class="Java plain">Exception&nbsp;{</code></div>
<div class="line number5 index4 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;clazz&nbsp;=&nbsp;Class.forName(</code><code class="Java string">"net.xsoftlab.baike.TestReflect"</code><code class="Java plain">);</code></div>
<div class="line number6 index5 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;调用TestReflect类中的reflect1方法</code></div>
<div class="line number7 index6 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Method&nbsp;method&nbsp;=&nbsp;clazz.getMethod(</code><code class="Java string">"reflect1"</code><code class="Java plain">);</code></div>
<div class="line number8 index7 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">method.invoke(clazz.newInstance());</code></div>
<div class="line number9 index8 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;Java&nbsp;反射机制&nbsp;-&nbsp;调用某个类的方法1.</code></div>
<div class="line number10 index9 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;调用TestReflect的reflect2方法</code></div>
<div class="line number11 index10 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">method&nbsp;=&nbsp;clazz.getMethod(</code><code class="Java string">"reflect2"</code><code class="Java plain">,&nbsp;</code><code class="Java keyword">int</code><code class="Java plain">.</code><code class="Java keyword">class</code><code class="Java plain">,&nbsp;String.</code><code class="Java keyword">class</code><code class="Java plain">);</code></div>
<div class="line number12 index11 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">method.invoke(clazz.newInstance(),&nbsp;</code><code class="Java value">20</code><code class="Java plain">,&nbsp;</code><code class="Java string">"张三"</code><code class="Java plain">);</code></div>
<div class="line number13 index12 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;Java&nbsp;反射机制&nbsp;-&nbsp;调用某个类的方法2.</code></div>
<div class="line number14 index13 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;age&nbsp;-&gt;&nbsp;20.&nbsp;name&nbsp;-&gt;&nbsp;张三</code></div>
<div class="line number15 index14 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number16 index15 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">reflect1()&nbsp;{</code></div>
<div class="line number17 index16 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">"Java&nbsp;反射机制&nbsp;-&nbsp;调用某个类的方法1."</code><code class="Java plain">);</code></div>
<div class="line number18 index17 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number19 index18 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">reflect2(</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">age,&nbsp;String&nbsp;name)&nbsp;{</code></div>
<div class="line number20 index19 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">"Java&nbsp;反射机制&nbsp;-&nbsp;调用某个类的方法2."</code><code class="Java plain">);</code></div>
<div class="line number21 index20 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">"age&nbsp;-&gt;&nbsp;"</code>&nbsp;<code class="Java plain">+&nbsp;age&nbsp;+&nbsp;</code><code class="Java string">".&nbsp;name&nbsp;-&gt;&nbsp;"</code>&nbsp;<code class="Java plain">+&nbsp;name);</code></div>
<div class="line number22 index21 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number23 index22 alt2"><code class="Java plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="anchor-list"><a target="_blank" name="3_9" class="anchor "></a></div>
<h3><a name="t13" target="_blank"></a>通过反射机制操作某个类的属性</h3>
<div>
<div id="syntaxhighlighter-toolbar">
<div class="toolbar"><span>Java</span> | <span class="btn-clipboard btn-clipboard-hover">
复制</span></div>
</div>
<div id="highlighter_539306" class="syntaxhighlighter  Java">
<table cellspacing="0" cellpadding="0" border="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Java keyword">package</code>&nbsp;<code class="Java plain">net.xsoftlab.baike;</code></div>
<div class="line number2 index1 alt1"><code class="Java keyword">import</code>&nbsp;<code class="Java plain">java.lang.reflect.Field;</code></div>
<div class="line number3 index2 alt2"><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">class</code>&nbsp;<code class="Java plain">TestReflect&nbsp;{</code></div>
<div class="line number4 index3 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">private</code>&nbsp;<code class="Java plain">String&nbsp;proprety&nbsp;=&nbsp;</code><code class="Java keyword">null</code><code class="Java plain">;</code></div>
<div class="line number5 index4 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">static</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">main(String[]&nbsp;args)&nbsp;</code><code class="Java keyword">throws</code>&nbsp;<code class="Java plain">Exception&nbsp;{</code></div>
<div class="line number6 index5 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;clazz&nbsp;=&nbsp;Class.forName(</code><code class="Java string">"net.xsoftlab.baike.TestReflect"</code><code class="Java plain">);</code></div>
<div class="line number7 index6 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Object&nbsp;obj&nbsp;=&nbsp;clazz.newInstance();</code></div>
<div class="line number8 index7 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;可以直接对&nbsp;private&nbsp;的属性赋值</code></div>
<div class="line number9 index8 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Field&nbsp;field&nbsp;=&nbsp;clazz.getDeclaredField(</code><code class="Java string">"proprety"</code><code class="Java plain">);</code></div>
<div class="line number10 index9 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">field.setAccessible(</code><code class="Java keyword">true</code><code class="Java plain">);</code></div>
<div class="line number11 index10 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">field.set(obj,&nbsp;</code><code class="Java string">"Java反射机制"</code><code class="Java plain">);</code></div>
<div class="line number12 index11 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(field.get(obj));</code></div>
<div class="line number13 index12 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number14 index13 alt1"><code class="Java plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="anchor-list"><a target="_blank" name="3_10" class="anchor "></a></div>
<h3><a name="t14" target="_blank"></a>反射机制的动态代理<br>
</h3>
<div>
<div id="syntaxhighlighter-toolbar">
<div class="toolbar"><span>Java</span> | <span class="btn-clipboard btn-clipboard-hover">
复制</span></div>
</div>
<div id="highlighter_151793" class="syntaxhighlighter  Java">
<table cellspacing="0" cellpadding="0" border="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Java comments">//&nbsp;获取类加载器的方法</code></div>
<div class="line number2 index1 alt1"><code class="Java plain">TestReflect&nbsp;testReflect&nbsp;=&nbsp;</code><code class="Java keyword">new</code>&nbsp;<code class="Java plain">TestReflect();</code></div>
<div class="line number3 index2 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">"类加载器&nbsp;&nbsp;"</code>&nbsp;<code class="Java plain">+&nbsp;testReflect.getClass().getClassLoader().getClass().getName());</code></div>
<div class="line number4 index3 alt1"><code class="Java keyword">package</code>&nbsp;<code class="Java plain">net.xsoftlab.baike;</code></div>
<div class="line number5 index4 alt2"><code class="Java keyword">import</code>&nbsp;<code class="Java plain">java.lang.reflect.InvocationHandler;</code></div>
<div class="line number6 index5 alt1"><code class="Java keyword">import</code>&nbsp;<code class="Java plain">java.lang.reflect.Method;</code></div>
<div class="line number7 index6 alt2"><code class="Java keyword">import</code>&nbsp;<code class="Java plain">java.lang.reflect.Proxy;</code></div>
<div class="line number8 index7 alt1"><code class="Java comments">//定义项目接口</code></div>
<div class="line number9 index8 alt2"><code class="Java keyword">interface</code>&nbsp;<code class="Java plain">Subject&nbsp;{</code></div>
<div class="line number10 index9 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java plain">String&nbsp;say(String&nbsp;name,&nbsp;</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">age);</code></div>
<div class="line number11 index10 alt2"><code class="Java plain">}</code></div>
<div class="line number12 index11 alt1"><code class="Java comments">//&nbsp;定义真实项目</code></div>
<div class="line number13 index12 alt2"><code class="Java keyword">class</code>&nbsp;<code class="Java plain">RealSubject&nbsp;</code><code class="Java keyword">implements</code>&nbsp;<code class="Java plain">Subject&nbsp;{</code></div>
<div class="line number14 index13 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java plain">String&nbsp;say(String&nbsp;name,&nbsp;</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">age)&nbsp;{</code></div>
<div class="line number15 index14 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">return</code>&nbsp;<code class="Java plain">name&nbsp;+&nbsp;</code><code class="Java string">"&nbsp;&nbsp;"</code>&nbsp;<code class="Java plain">+&nbsp;age;</code></div>
<div class="line number16 index15 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number17 index16 alt2"><code class="Java plain">}</code></div>
<div class="line number18 index17 alt1"><code class="Java keyword">class</code>&nbsp;<code class="Java plain">MyInvocationHandler&nbsp;</code><code class="Java keyword">implements</code>&nbsp;<code class="Java plain">InvocationHandler&nbsp;{</code></div>
<div class="line number19 index18 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">private</code>&nbsp;<code class="Java plain">Object&nbsp;obj&nbsp;=&nbsp;</code><code class="Java keyword">null</code><code class="Java plain">;</code></div>
<div class="line number20 index19 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java plain">Object&nbsp;bind(Object&nbsp;obj)&nbsp;{</code></div>
<div class="line number21 index20 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">this</code><code class="Java plain">.obj&nbsp;=&nbsp;obj;</code></div>
<div class="line number22 index21 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">return</code>&nbsp;<code class="Java plain">Proxy.newProxyInstance(obj.getClass().getClassLoader(),&nbsp;obj.getClass().getInterfaces(),&nbsp;</code><code class="Java keyword">this</code><code class="Java plain">);</code></div>
<div class="line number23 index22 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number24 index23 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java plain">Object&nbsp;invoke(Object&nbsp;proxy,&nbsp;Method&nbsp;method,&nbsp;Object[]&nbsp;args)&nbsp;</code><code class="Java keyword">throws</code>&nbsp;<code class="Java plain">Throwable&nbsp;{</code></div>
<div class="line number25 index24 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Object&nbsp;temp&nbsp;=&nbsp;method.invoke(</code><code class="Java keyword">this</code><code class="Java plain">.obj,&nbsp;args);</code></div>
<div class="line number26 index25 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">return</code>&nbsp;<code class="Java plain">temp;</code></div>
<div class="line number27 index26 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number28 index27 alt1"><code class="Java plain">}</code></div>
<div class="line number29 index28 alt2"><code class="Java preprocessor">/**</code></div>
<div class="line number30 index29 alt1"><code class="Java spaces">&nbsp;</code><code class="Java preprocessor">*&nbsp;在java中有三种类类加载器。</code></div>
<div class="line number31 index30 alt2"><code class="Java spaces">&nbsp;</code><code class="Java preprocessor">*&nbsp;</code></div>
<div class="line number32 index31 alt1"><code class="Java spaces">&nbsp;</code><code class="Java preprocessor">*&nbsp;1）Bootstrap&nbsp;ClassLoader&nbsp;此加载器采用c++编写，一般开发中很少见。</code></div>
<div class="line number33 index32 alt2"><code class="Java spaces">&nbsp;</code><code class="Java preprocessor">*&nbsp;</code></div>
<div class="line number34 index33 alt1"><code class="Java spaces">&nbsp;</code><code class="Java preprocessor">*&nbsp;2）Extension&nbsp;ClassLoader&nbsp;用来进行扩展类的加载，一般对应的是jrelibext目录中的类</code></div>
<div class="line number35 index34 alt2"><code class="Java spaces">&nbsp;</code><code class="Java preprocessor">*&nbsp;</code></div>
<div class="line number36 index35 alt1"><code class="Java spaces">&nbsp;</code><code class="Java preprocessor">*&nbsp;3）AppClassLoader&nbsp;加载classpath指定的类，是最常用的加载器。同时也是java中默认的加载器。</code></div>
<div class="line number37 index36 alt2"><code class="Java spaces">&nbsp;</code><code class="Java preprocessor">*&nbsp;</code></div>
<div class="line number38 index37 alt1"><code class="Java spaces">&nbsp;</code><code class="Java preprocessor">*&nbsp;如果想要完成动态代理，首先需要定义一个InvocationHandler接口的子类，已完成代理的具体操作。</code></div>
<div class="line number39 index38 alt2"><code class="Java spaces">&nbsp;</code><code class="Java preprocessor">*&nbsp;</code></div>
<div class="line number40 index39 alt1"><code class="Java spaces">&nbsp;</code><code class="Java preprocessor">*&nbsp;@author&nbsp;xsoftlab.net</code></div>
<div class="line number41 index40 alt2"><code class="Java spaces">&nbsp;</code><code class="Java preprocessor">*&nbsp;</code></div>
<div class="line number42 index41 alt1"><code class="Java spaces">&nbsp;</code><code class="Java preprocessor">*/</code></div>
<div class="line number43 index42 alt2"><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">class</code>&nbsp;<code class="Java plain">TestReflect&nbsp;{</code></div>
<div class="line number44 index43 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">static</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">main(String[]&nbsp;args)&nbsp;</code><code class="Java keyword">throws</code>&nbsp;<code class="Java plain">Exception&nbsp;{</code></div>
<div class="line number45 index44 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">MyInvocationHandler&nbsp;demo&nbsp;=&nbsp;</code><code class="Java keyword">new</code>&nbsp;<code class="Java plain">MyInvocationHandler();</code></div>
<div class="line number46 index45 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Subject&nbsp;sub&nbsp;=&nbsp;(Subject)&nbsp;demo.bind(</code><code class="Java keyword">new</code>&nbsp;<code class="Java plain">RealSubject());</code></div>
<div class="line number47 index46 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">String&nbsp;info&nbsp;=&nbsp;sub.say(</code><code class="Java string">"Rollen"</code><code class="Java plain">,&nbsp;</code><code class="Java value">20</code><code class="Java plain">);</code></div>
<div class="line number48 index47 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(info);</code></div>
<div class="line number49 index48 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number50 index49 alt1"><code class="Java plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="anchor-list"><a target="_blank" name="4" class="anchor "></a></div>
<h2><a name="t15" target="_blank"></a><span class="index">4</span><span class="content">反射机制的应用实例</span></h2>
<div class="anchor-list"><a target="_blank" name="4_1" class="anchor "></a></div>
<h3><a name="t16" target="_blank"></a>在泛型为Integer的ArrayList中存放一个String类型的对象。</h3>
<div>
<div id="syntaxhighlighter-toolbar">
<div class="toolbar"><span>Java</span> | <span class="btn-clipboard btn-clipboard-hover">
复制</span></div>
</div>
<div id="highlighter_186914" class="syntaxhighlighter  Java">
<table cellspacing="0" cellpadding="0" border="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Java keyword">package</code>&nbsp;<code class="Java plain">net.xsoftlab.baike;</code></div>
<div class="line number2 index1 alt1"><code class="Java keyword">import</code>&nbsp;<code class="Java plain">java.lang.reflect.Method;</code></div>
<div class="line number3 index2 alt2"><code class="Java keyword">import</code>&nbsp;<code class="Java plain">java.util.ArrayList;</code></div>
<div class="line number4 index3 alt1"><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">class</code>&nbsp;<code class="Java plain">TestReflect&nbsp;{</code></div>
<div class="line number5 index4 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">static</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">main(String[]&nbsp;args)&nbsp;</code><code class="Java keyword">throws</code>&nbsp;<code class="Java plain">Exception&nbsp;{</code></div>
<div class="line number6 index5 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">ArrayList&lt;Integer&gt;&nbsp;list&nbsp;=&nbsp;</code><code class="Java keyword">new</code>&nbsp;<code class="Java plain">ArrayList&lt;Integer&gt;();</code></div>
<div class="line number7 index6 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Method&nbsp;method&nbsp;=&nbsp;list.getClass().getMethod(</code><code class="Java string">"add"</code><code class="Java plain">,&nbsp;Object.</code><code class="Java keyword">class</code><code class="Java plain">);</code></div>
<div class="line number8 index7 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">method.invoke(list,&nbsp;</code><code class="Java string">"Java反射机制实例。"</code><code class="Java plain">);</code></div>
<div class="line number9 index8 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(list.get(</code><code class="Java value">0</code><code class="Java plain">));</code></div>
<div class="line number10 index9 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number11 index10 alt2"><code class="Java plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="anchor-list"><a target="_blank" name="4_2" class="anchor "></a></div>
<h3><a name="t17" target="_blank"></a>通过反射取得并修改数组的信息</h3>
<div>
<div id="syntaxhighlighter-toolbar">
<div class="toolbar"><span>Java</span> | <span class="btn-clipboard btn-clipboard-hover">
复制</span></div>
</div>
<div id="highlighter_963507" class="syntaxhighlighter  Java">
<table cellspacing="0" cellpadding="0" border="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Java keyword">package</code>&nbsp;<code class="Java plain">net.xsoftlab.baike;</code></div>
<div class="line number2 index1 alt1"><code class="Java keyword">import</code>&nbsp;<code class="Java plain">java.lang.reflect.Array;</code></div>
<div class="line number3 index2 alt2"><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">class</code>&nbsp;<code class="Java plain">TestReflect&nbsp;{</code></div>
<div class="line number4 index3 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">static</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">main(String[]&nbsp;args)&nbsp;</code><code class="Java keyword">throws</code>&nbsp;<code class="Java plain">Exception&nbsp;{</code></div>
<div class="line number5 index4 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">int</code><code class="Java plain">[]&nbsp;temp&nbsp;=&nbsp;{&nbsp;</code><code class="Java value">1</code><code class="Java plain">,&nbsp;</code><code class="Java value">2</code><code class="Java plain">,&nbsp;</code><code class="Java value">3</code><code class="Java plain">,&nbsp;</code><code class="Java value">4</code><code class="Java plain">,&nbsp;</code><code class="Java value">5</code>&nbsp;<code class="Java plain">};</code></div>
<div class="line number6 index5 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;demo&nbsp;=&nbsp;temp.getClass().getComponentType();</code></div>
<div class="line number7 index6 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">"数组类型：&nbsp;"</code>&nbsp;<code class="Java plain">+&nbsp;demo.getName());</code></div>
<div class="line number8 index7 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">"数组长度&nbsp;&nbsp;"</code>&nbsp;<code class="Java plain">+&nbsp;Array.getLength(temp));</code></div>
<div class="line number9 index8 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">"数组的第一个元素:&nbsp;"</code>&nbsp;<code class="Java plain">+&nbsp;Array.get(temp,&nbsp;</code><code class="Java value">0</code><code class="Java plain">));</code></div>
<div class="line number10 index9 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Array.set(temp,&nbsp;</code><code class="Java value">0</code><code class="Java plain">,&nbsp;</code><code class="Java value">100</code><code class="Java plain">);</code></div>
<div class="line number11 index10 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">"修改之后数组第一个元素为：&nbsp;"</code>&nbsp;<code class="Java plain">+&nbsp;Array.get(temp,&nbsp;</code><code class="Java value">0</code><code class="Java plain">));</code></div>
<div class="line number12 index11 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number13 index12 alt2"><code class="Java plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="anchor-list"><a target="_blank" name="4_3" class="anchor "></a></div>
<h3><a name="t18" target="_blank"></a>通过反射机制修改数组的大小</h3>
<div>
<div id="syntaxhighlighter-toolbar">
<div class="toolbar"><span>Java</span> | <span class="btn-clipboard btn-clipboard-hover">
复制</span></div>
</div>
<div id="highlighter_366357" class="syntaxhighlighter  Java">
<table cellspacing="0" cellpadding="0" border="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Java keyword">package</code>&nbsp;<code class="Java plain">net.xsoftlab.baike;</code></div>
<div class="line number2 index1 alt1"><code class="Java keyword">import</code>&nbsp;<code class="Java plain">java.lang.reflect.Array;</code></div>
<div class="line number3 index2 alt2"><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">class</code>&nbsp;<code class="Java plain">TestReflect&nbsp;{</code></div>
<div class="line number4 index3 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">static</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">main(String[]&nbsp;args)&nbsp;</code><code class="Java keyword">throws</code>&nbsp;<code class="Java plain">Exception&nbsp;{</code></div>
<div class="line number5 index4 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">int</code><code class="Java plain">[]&nbsp;temp&nbsp;=&nbsp;{&nbsp;</code><code class="Java value">1</code><code class="Java plain">,&nbsp;</code><code class="Java value">2</code><code class="Java plain">,&nbsp;</code><code class="Java value">3</code><code class="Java plain">,&nbsp;</code><code class="Java value">4</code><code class="Java plain">,&nbsp;</code><code class="Java value">5</code><code class="Java plain">,&nbsp;</code><code class="Java value">6</code><code class="Java plain">,&nbsp;</code><code class="Java value">7</code><code class="Java plain">,&nbsp;</code><code class="Java value">8</code><code class="Java plain">,&nbsp;</code><code class="Java value">9</code>&nbsp;<code class="Java plain">};</code></div>
<div class="line number6 index5 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">int</code><code class="Java plain">[]&nbsp;newTemp&nbsp;=&nbsp;(</code><code class="Java keyword">int</code><code class="Java plain">[])&nbsp;arrayInc(temp,&nbsp;</code><code class="Java value">15</code><code class="Java plain">);</code></div>
<div class="line number7 index6 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">print(newTemp);</code></div>
<div class="line number8 index7 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">String[]&nbsp;atr&nbsp;=&nbsp;{&nbsp;</code><code class="Java string">"a"</code><code class="Java plain">,&nbsp;</code><code class="Java string">"b"</code><code class="Java plain">,&nbsp;</code><code class="Java string">"c"</code>&nbsp;<code class="Java plain">};</code></div>
<div class="line number9 index8 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">String[]&nbsp;str1&nbsp;=&nbsp;(String[])&nbsp;arrayInc(atr,&nbsp;</code><code class="Java value">8</code><code class="Java plain">);</code></div>
<div class="line number10 index9 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">print(str1);</code></div>
<div class="line number11 index10 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number12 index11 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;修改数组大小</code></div>
<div class="line number13 index12 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">static</code>&nbsp;<code class="Java plain">Object&nbsp;arrayInc(Object&nbsp;obj,&nbsp;</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">len)&nbsp;{</code></div>
<div class="line number14 index13 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;arr&nbsp;=&nbsp;obj.getClass().getComponentType();</code></div>
<div class="line number15 index14 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Object&nbsp;newArr&nbsp;=&nbsp;Array.newInstance(arr,&nbsp;len);</code></div>
<div class="line number16 index15 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">co&nbsp;=&nbsp;Array.getLength(obj);</code></div>
<div class="line number17 index16 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.arraycopy(obj,&nbsp;</code><code class="Java value">0</code><code class="Java plain">,&nbsp;newArr,&nbsp;</code><code class="Java value">0</code><code class="Java plain">,&nbsp;co);</code></div>
<div class="line number18 index17 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">return</code>&nbsp;<code class="Java plain">newArr;</code></div>
<div class="line number19 index18 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number20 index19 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java comments">//&nbsp;打印</code></div>
<div class="line number21 index20 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">static</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">print(Object&nbsp;obj)&nbsp;{</code></div>
<div class="line number22 index21 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">Class&lt;?&gt;&nbsp;c&nbsp;=&nbsp;obj.getClass();</code></div>
<div class="line number23 index22 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">if</code>&nbsp;<code class="Java plain">(!c.isArray())&nbsp;{</code></div>
<div class="line number24 index23 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">return</code><code class="Java plain">;</code></div>
<div class="line number25 index24 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number26 index25 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">"数组长度为：&nbsp;"</code>&nbsp;<code class="Java plain">+&nbsp;Array.getLength(obj));</code></div>
<div class="line number27 index26 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">for</code>&nbsp;<code class="Java plain">(</code><code class="Java keyword">int</code>&nbsp;<code class="Java plain">i&nbsp;=&nbsp;</code><code class="Java value">0</code><code class="Java plain">;&nbsp;i&nbsp;&lt;&nbsp;Array.getLength(obj);&nbsp;i++)&nbsp;{</code></div>
<div class="line number28 index27 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.print(Array.get(obj,&nbsp;i)&nbsp;+&nbsp;</code><code class="Java string">"&nbsp;"</code><code class="Java plain">);</code></div>
<div class="line number29 index28 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number30 index29 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println();</code></div>
<div class="line number31 index30 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number32 index31 alt1"><code class="Java plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="anchor-list"><a target="_blank" name="4_4" class="anchor "></a></div>
<h3><a name="t19" target="_blank"></a>将反射机制应用于工厂模式<br>
</h3>
<div id="syntaxhighlighter-toolbar">
<div class="toolbar"><span>Java</span> | <span class="btn-clipboard btn-clipboard-hover">
复制</span></div>
</div>
<table cellspacing="0" cellpadding="0" border="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Java keyword">package</code>&nbsp;<code class="Java plain">net.xsoftlab.baike;</code></div>
<div class="line number2 index1 alt1"><code class="Java keyword">interface</code>&nbsp;<code class="Java plain">fruit&nbsp;{</code></div>
<div class="line number3 index2 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">abstract</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">eat();</code></div>
<div class="line number4 index3 alt1"><code class="Java plain">}</code></div>
<div class="line number5 index4 alt2"><code class="Java keyword">class</code>&nbsp;<code class="Java plain">Apple&nbsp;</code><code class="Java keyword">implements</code>&nbsp;<code class="Java plain">fruit&nbsp;{</code></div>
<div class="line number6 index5 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">eat()&nbsp;{</code></div>
<div class="line number7 index6 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">"Apple"</code><code class="Java plain">);</code></div>
<div class="line number8 index7 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number9 index8 alt2"><code class="Java plain">}</code></div>
<div class="line number10 index9 alt1"><code class="Java keyword">class</code>&nbsp;<code class="Java plain">Orange&nbsp;</code><code class="Java keyword">implements</code>&nbsp;<code class="Java plain">fruit&nbsp;{</code></div>
<div class="line number11 index10 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">void</code>&nbsp;<code class="Java plain">eat()&nbsp;{</code></div>
<div class="line number12 index11 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">System.out.println(</code><code class="Java string">"Orange"</code><code class="Java plain">);</code></div>
<div class="line number13 index12 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number14 index13 alt1"><code class="Java plain">}</code></div>
<div class="line number15 index14 alt2"><code class="Java keyword">class</code>&nbsp;<code class="Java plain">Factory&nbsp;{</code></div>
<div class="line number16 index15 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">public</code>&nbsp;<code class="Java keyword">static</code>&nbsp;<code class="Java plain">fruit&nbsp;getInstance(String&nbsp;ClassName)&nbsp;{</code></div>
<div class="line number17 index16 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">fruit&nbsp;f&nbsp;=&nbsp;</code><code class="Java keyword">null</code><code class="Java plain">;</code></div>
<div class="line number18 index17 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">try</code>&nbsp;<code class="Java plain">{</code></div>
<div class="line number19 index18 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">f&nbsp;=&nbsp;(fruit)&nbsp;Class.forName(ClassName).newInstance();</code></div>
<div class="line number20 index19 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}&nbsp;</code><code class="Java keyword">catch</code>&nbsp;<code class="Java plain">(Exception&nbsp;e)&nbsp;{</code></div>
<div class="line number21 index20 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">e.printStackTrace();</code></div>
<div class="line number22 index21 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number23 index22 alt2"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java keyword">return</code>&nbsp;<code class="Java plain">f;</code></div>
<div class="line number24 index23 alt1"><code class="Java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Java plain">}</code></div>
<div class="line number25 index24 alt2"><code class="Java plain">}</code></div>
<div class="line number26 index25 alt1"><code class="Java preprocessor">/**</code></div>
<div class="line number27 index26 alt2"><code class="Java spaces">&nbsp;</code><code class="Java preprocessor">*&nbsp;对于普通的工厂模式当我们在添加一个子类的时候，就需要对应的修改工厂类。&nbsp;当我们添加很多的子类的时候，会很麻烦。</code></div>
<div class="line number28 index27 alt1"><code class="Java spaces">&nbsp;</code><code class="Java preprocessor">*&nbsp;Java&nbsp;工厂模式可以参考</code></di